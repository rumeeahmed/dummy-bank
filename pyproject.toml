[tool.poetry]
name = "dummy-bank"
version = "0.0.1"
description = ""
authors = ["Rumee Ahmed <rumeeahmad@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
asyncpg = "^0.30.0"
email-validator = "^2.1.2"
sqlalchemy = { extras = ["asyncio"], version = "^2.0.37" }
pydantic = "^2.10.6"
pydantic-settings = "^2.7.1"
uvicorn = "^0.34.0"
fastapi = "^0.115.7"
pyjwt = "^2.10.1"
structlog = "^25.1.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
mypy = "^1.14.1"
ruff = "^0.9.2"
psycopg2 = "^2.9.10"
pytest-postgresql = "^6.0.1"
bandit = "^1.8.2"
coverage = "^7.6.10"
pytest-asyncio = "^0.25.3"
alembic = "^1.14.1"
freezegun = "^1.5.1"
pytest-httpx = "^0.35.0"
python-dotenv = "^1.0.1"


[tool.mypy]
exclude = ["__pycache__", ".pytest_cache", ".ruff_cache", "scratch"]
disallow_untyped_defs = true
disable_error_code = "type-abstract"
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
explicit_package_bases = true


[tool.pytest.ini_options]
addopts = "--import-mode=importlib"
asyncio_mode = "auto"
markers = ["wip", "integration"]
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]
asyncio_default_fixture_loop_scope = "function"


[tool.pytest]
env_files = ".env"


[tool.ruff.lint]
extend-select = ["I", "F401"]


[tool.coverage.run]
omit = [
  ".*",
  "*/site-packages/*",
  "*/tests/*",
  "*/conftest.py",
  "__init__.py",
  "*/settings.py",
]


[tool.coverage.report]
fail_under = 100
exclude_also = ["if __name__ == .__main__.:"]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "if TYPE_CHECKING",
    "\\.\\.\\.",  # This excludes lines with just ellipsis (...)
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
